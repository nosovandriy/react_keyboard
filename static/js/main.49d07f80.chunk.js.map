{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlePressedKey","event","key","setState","document","addEventListener","this","removeEventListener","message","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,iBAAmB,SAACC,GACdA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,WAAYE,EAAMC,OAfxC,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,oBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,oBAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WACJS,EAAU,GAMd,OAJIT,IACFS,EAAO,mCAA+BT,EAA/B,MAIP,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BD,GAAW,kCA7BhD,GAAyBE,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.49d07f80.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlePressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlePressedKey);\n  }\n\n  handlePressedKey = (event: KeyboardEvent) => {\n    if (event.key) {\n      this.setState({ pressedKey: event.key });\n    }\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n    let message = '';\n\n    if (pressedKey) {\n      message = `The last pressed key is <${pressedKey}>`;\n    }\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{message || 'Nothing was pressed yet'}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}